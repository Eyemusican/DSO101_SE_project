# Development environment with testing support

FROM node:18-alpine

# Set app directory
WORKDIR /app

# Environment variables
ENV NODE_OPTIONS=--max_old_space_size=4096

# Install dependencies
COPY package.json ./
COPY sync-package-lock ./
RUN npm install

# Install Jest and testing dependencies for BMI calculator tests
RUN npm install --save-dev jest @types/jest ts-jest supertest @types/supertest

# Build configuration
COPY nodemon.json ./
COPY tsconfig.json ./
COPY src ./src

# Create jest.config.js for testing
RUN echo 'module.exports = { \
  preset: "ts-jest", \
  testEnvironment: "node", \
  roots: ["<rootDir>/src"], \
  testMatch: ["**/__tests__/**/*.test.ts"], \
  coverageDirectory: "coverage", \
  collectCoverageFrom: [ \
    "src/**/*.ts", \
    "!src/**/*.d.ts" \
  ] \
};' > jest.config.js

# Migrations and database setup
COPY database ./

# Create directories for BMI data storage
RUN mkdir -p /app/bmi-data /app/coverage

# Remove entrypoint for now - not needed for basic functionality
# COPY docker-entrypoint.sh /docker-entrypoint.sh
# RUN chmod +x /docker-entrypoint.sh
# ENTRYPOINT [ "/docker-entrypoint.sh" ]

# Default command (can be overridden in docker-compose)
CMD [ "npm", "run", "serve" ]